[tool.poetry]
name = "fastapi-postgres"
version = "0.1.0"
description = ""
authors = ["Irven Aelbrecht"]
readme = "README.md"
packages = [{include = "fastapi_postgres"}]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.112.1"
uvicorn = "^0.30.6"
pydantic-settings = "^2.4.0"
asyncpg = "^0.29.0"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.32"}

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-asyncio = "^0.24.0"
httpx = "^0.27.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "UP", "N", "S", "C", "B", "PLC", "PLE", "PLW"]
ignore = ["N818",  # Requires exceptions to have a name ending in 'Error'.
          "PLC1901",  # Requires if string == '' to be simplified to if string.
          "PLW2901"]  # Forbids redefining variables outside a loop from inside the loop.

[tool.ruff.lint.per-file-ignores]
"*"= ["F722", # False positive 'Syntax error in forward annotation' for nptyping annotations.
        "F821"] # False positive 'Undefined name' for nptyping annotations.
"tests/*" = ["S101"]

[tool.pytest.ini_options]
pythonpath = "fastapi-sql"
testpaths = "tests"
asyncio_mode = "auto"

[tool.pyright]
venvPath = "."
venv = "venv"
